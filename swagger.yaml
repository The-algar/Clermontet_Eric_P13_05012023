---
swagger: "2.0"
info:
  description: Contains all available API endpoints in the P13 Argent Bank codebase
  version: 1.0.0
  title: Argent Bank API documentation
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v1
tags:
- name: User Module
- name: Transaction Module
schemes:
- http
- https
paths:
  /user/login:
    post:
      tags:
      - User Module
      summary: Login
      description: API for Login
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Login Payload
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
      - User Module
      summary: Signup
      description: API for Signup
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Signup Payload
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      tags:
      - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      security:
      - Bearer: []
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      tags:
      - User Module
      summary: User Profile API
      description: API for updating a user profile
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - in: body
        name: body
        description: Update user profile attributes
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      security:
      - Bearer: []
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/getTransaction:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transactions API
      description: API for fetching list of the month requests
      parameters:
        - in: query
          type: string
          name: Month
          description: search this month
          required: true
        - in: query
          type: string
          name: Year
          description: indicate the year of search
          required: true
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: transactions month retrieved successully
          schema:
            $ref: '#/definitions/GetTransactionsResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions/{transactionID}:
    get:
      tags:
      - Transaction Module
      summary: Transaction API
      description: API find transaction by ID
      operationId: getTransactionById
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - name: transactionID
        in: path
        description: ID of transaction to be looked for
        required: true
        type: integer
        format: int64
      security:
      - Bearer: []
      responses:
        "200":
          description: transaction retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        "400":
          description: Invalid TransactionID
        "500":
          description: Internal Server Error
    put:
      tags:
      - Transaction Module
      summary: Transaction API
      description: update a transaction in the database
      operationId: updateTransactionById
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - name: transactionID
        in: path
        description: ID of transaction update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: send transaction information
        required: true
        schema:
          $ref: '#/definitions/AddTransaction'
      security:
      - Bearer: []
      responses:
        "200":
          description: transaction updating successully
          schema:
            $ref: '#/definitions/AddTransactionResponse'
        "400":
          description: Invalid TransactionID
        "500":
          description: Internal Server Error
    delete:
      tags:
      - Transaction Module
      summary: Transaction API
      description: delete a transaction in the database
      operationId: deleteTransactionById
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - name: transactionID
        in: path
        description: ID of transaction's update
        required: true
        type: integer
        format: int64
      security:
      - Bearer: []
      responses:
        "204":
          description: demande resource delete
        "400":
          description: Invalid TransactionID
        "500":
          description: Internal Server Error
  /transactions/addTransaction:
    post:
      tags:
      - Transaction Module
      summary: Transaction API
      description: add a transaction in the database
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - in: body
        name: body
        description: send transaction information
        required: true
        schema:
          $ref: '#/definitions/AddTransaction'
      security:
      - Bearer: []
      responses:
        "200":
          description: transaction added successully
          schema:
            $ref: '#/definitions/AddTransactionResponse'
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/ApiResponse_body'
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  GetTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/GetTransactionsResponse_body'
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/TransactionResponse_body'
  AddTransaction:
    type: object
    properties:
      date:
        type: string
      description:
        type: string
      amont:
        type: string
      transaction type:
        type: string
      category:
        type: string
      notes:
        type: string
  AddTransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/AddTransactionResponse_body'
  ApiResponse_body:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
  GetTransactionsResponse_body:
    type: object
    properties:
      id:
        type: string
      transactions:
        type: object
        description: data
        properties: {}
  TransactionResponse_body:
    type: object
    properties:
      date:
        type: string
      description:
        type: string
      amont:
        type: string
      transaction type:
        type: string
      category:
        type: string
      notes:
        type: string
  AddTransactionResponse_body:
    type: object
    properties:
      id:
        type: string